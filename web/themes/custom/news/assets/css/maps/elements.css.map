{"version":3,"sources":["_globals.scss","_focus.scss","../settings/_colors.scss","_selection.scss","_page.scss","../tools/mixins/_font-size.scss","../settings/_custom.scss","../settings/_global.scss","_typography.scss","_headings.scss","_links.scss","../tools/functions/_colors.scss","_lists.scss","_images.scss","_blockquotes.scss","../tools/functions/_math.scss","_horizontal-rules.scss"],"names":[],"mappings":"AAIA;EACE,sBAAsB;EAEtB,YAAY,EAAA;;ACMd;EACE,2CCkBY;EDjBZ,mBAJwB,EAAA;;AEJ1B;EACE,mBDwBY;ECvBZ,cDJa,EAAA;;ACEf;EACE,mBDwBY;ECvBZ,cDJa,EAAA;;AEDf;EACE,eAA4C;EAC5C,cAAoD;EACpD,kBAAkB;EAClB,gBAAgB,EAAA;;AAGlB;ECiCE,eAAkD;EAOhD,gBAAwC;EDtC1C,mBFRa;EESb,iCEdgC;EFehC,cG4BkB,EAAA;;ACjCpB;EACE,gBAP0B,EAAA;EAM5B;IAII,gBAAgB,EAAA;;AAIpB;EH0BE,iBAAkD;EAOhD,kBAAwC;EG/B1C,mBAAmB,EAAA;;AAGrB;EHqBE,iBAAkD;EAOhD,oBAAwC;EG1B1C,mBAAmB,EAAA;;AAGrB;EACE,cAtBiB;EAuBjB,yBAxBe;EAyBf,cAvBkB,EAAA;;AA0BpB;EACE,eDLqB;ECMrB,8DDGuE,EAAA;;AE1BzE;EJ+BE,kBAAkD;EAOhD,oBAAwC,EAAA;;AIlC5C;EJ2BE,kBAAkD;EAOhD,oBAAwC,EAAA;;AI9B5C;EJuBE,iBAAkD;EAOhD,oBAAwC,EAAA;;AI1B5C;EJmBE,kBAAkD;EAOhD,gBAAwC,EAAA;;AItB5C;EJeE,mBAAkD;EAOhD,oBAAwC,EAAA;;AIlB5C;EJWE,eAAkD;EAOhD,gBAAwC,EAAA;;AId5C;;;;;;EAME,iBAAiB;EACjB,qBAjC6B,EAAA;;ACF/B;EACE,cRsBY;EQrBZ,qBANoB,EAAA;EAItB;IAKI,cCuF8D;IDtF9D,qBARwB,EAAA;;AEA5B;EACE,wBAJ6B;EAK7B,UAJe,EAAA;;ACDjB;EACE,eAAe;EAEf,YAAY;EAEZ,kBAAkB;EAElB,sBAAsB,EAAA;;ACAxB;ETiCE,eAAkD;EAOhD,gBAAwC;EStC1C,oBCIwD;EDHxD,gBCGwD;EDFxD,8BZLgB;EYMhB,uBAPyB,EAAA;;AED3B;EACE,gBDQwD;ECPxD,mBDOwD;ECNxD,SAAS;EACT,6BdDgB,EAAA","file":"../elements.css","sourcesContent":["// =============================================================================\n// Globals.\n// =============================================================================\n\n* {\n  box-sizing: border-box;\n  // Workaround for flexboxes.\n  min-width: 0;\n}\n","// =============================================================================\n// Focus.\n//\n// It's a good practice to leave focus on element. If you disable it make sure\n// you have other visual implementation for focused elements!\n// @see http://www.outlinenone.com/\n// =============================================================================\n\n$focus-outline-width:  2px !default;\n$focus-outline-style:  dashed !default;\n$focus-outline-color:  rgba(theme-color(primary), 0.3) !default;\n$focus-outline-offset: 3px !default;\n\n:focus {\n  outline: $focus-outline-width $focus-outline-style $focus-outline-color;\n  outline-offset: $focus-outline-offset;\n}\n","// =============================================================================\n// Color variables.\n// =============================================================================\n\n// Base colors.\n$white: #ffffff !default;\n$gray-50: #fafafa !default;\n$gray-100: #f5f5f5 !default;\n$gray-200: #eeeeee !default;\n$gray-300: #e0e0e0 !default;\n$gray-400: #bdbdbd !default;\n$gray-500: #9e9e9e !default;\n$gray-600: #757575 !default;\n$gray-700: #616161 !default;\n$gray-800: #424242 !default;\n$gray-900: #212121 !default;\n$black: #000000 !default;\n\n$grays: () !default;\n$grays: map-merge((\n  50: $gray-50,\n  100: $gray-100,\n  200: $gray-200,\n  300: $gray-300,\n  400: $gray-400,\n  500: $gray-500,\n  600: $gray-600,\n  700: $gray-700,\n  800: $gray-800,\n  900: $gray-900\n), $grays);\n\n$blue: #1976d2 !default;\n$indigo: #6610f2 !default;\n$purple: #6f42c1 !default;\n$pink: #e83e8c !default;\n$red: #dc3545 !default;\n$orange: #fd7e14 !default;\n$yellow: #ffc107 !default;\n$green: #67c23a !default;\n$teal: #20c997 !default;\n$cyan: #17a2b8 !default;\n\n$colors: () !default;\n$colors: map-merge((\n  blue: $blue,\n  indigo: $indigo,\n  purple: $purple,\n  pink: $pink,\n  red: $red,\n  orange: $orange,\n  yellow: $yellow,\n  green: $green,\n  teal: $teal,\n  cyan: $cyan,\n  white: $white,\n  gray: $gray-600,\n  gray-dark: $gray-800\n), $colors);\n\n// Colors used in theme. Such as text colors, buttons, links and so on.\n// Here is main colors of the theme.\n// @see https://material.io/tools/color/ - can help you to chose correct colors.\n// @see https://material.io/design/color/the-color-system.html#color-usage-palettes\n// very good description, what is all about.\n$theme-colors: () !default;\n$theme-colors: map-merge((\n  primary: $blue,\n  primary-variant: $blue,\n  on-primary: $white,\n  secondary: $indigo,\n  secondary-variant: $indigo,\n  on-secondary: $black,\n  background: $white,\n  surface: $white,\n  success: $green,\n  info: $gray-500,\n  warning: $yellow,\n  error: $red,\n), $theme-colors);\n\n$theme-color-interval: 8% !default;\n\n$yiq-text-dark: $gray-900 !default;\n$yiq-text-light: $white !default;\n","// =============================================================================\n// Selection.\n// =============================================================================\n\n$selection-bg:    theme-color(primary) !default;\n$selection-color: color-yiq($selection-bg) !default;\n\n::selection {\n  background: $selection-bg;\n  color: $selection-color;\n}\n","// =============================================================================\n// Page.\n// =============================================================================\n\nhtml {\n  font-size: ($global-font-size / 16px) * 1rem;\n  line-height: $global-line-height / $global-font-size;\n  overflow-y: scroll;\n  min-height: 100%;\n}\n\nbody {\n  @include font-size($global-font-size);\n  background: theme-color(background);\n  font-family: $font-family;\n  color: $text-color;\n}\n","// =============================================================================\n// Font size with line-height.\n// =============================================================================\n\n// =============================================================================\n// Generates rem font-size.\n//\n// Allow to handle line-height and important state for font size. It's generated\n// in rem, but has px fallback.\n//\n// Simple usage:\n// @code\n// @include font-size(16px);\n// @endcode\n//\n// Force line-height to be specific size:\n// @code\n// @include font-size(16px, 1.5);\n// @endcode\n//\n// Adds 2 lines to font-size line-height.\n// @code\n// @include font-size(16px, $modifier: +2);\n// @endcode\n//\n// @param string|int $font-size\n//   The font size in px or integer.\n// @param string|int $line-height\n//   The line height for font size.\n// @param int $modifier\n//   The lines modifier.\n// @param bool $important\n//   The important indicator.\n// =============================================================================\n@mixin font-size($font-size, $line-height: auto, $modifier: 0, $important: false) {\n  // Handle important mark.\n  @if ($important == true) {\n    $important: !important;\n  } @else {\n    $important: null;\n  }\n\n  // Uncomment for font size with px fallback.\n  //font-size: $font-size $important;\n  font-size: ($font-size / $global-font-size) * 1rem $important;\n\n  @if ($line-height == 'auto') {\n    // Calculate line-height.\n    $lines: ceil($font-size / $global-baseline) + $modifier + 1;\n    $line-height: $lines * $global-baseline;\n\n    line-height: ($line-height / $font-size) $important;\n  } @else if (type-of($line-height) == number or $line-height == 'inherit' or $line-height == 'normal') {\n    line-height: $line-height $important;\n  }\n}\n","$font-family: 'Roboto', sans-serif;\n","// =============================================================================\n// Global variables.\n// =============================================================================\n\n// The main multiplier for all sizes.\n// Your \"Rule of X\". The common values: 4px (Google), 6px (inuitcss), 8px.\n// @see https://medium.com/wayfair-design/more-padding-please-b95e19422acc\n$global-baseline: 8px !default;\n\n// Baseline factors.\n$unit-factors: () !default;\n$unit-factors: map-merge((\n  tiny: 1,\n  small: 2,\n  normal: 4,\n  large: 8,\n  huge: 16,\n), $unit-factors);\n\n// Spacing sizes based on baseline and unit factor.\n$spacing-units: () !default;\n$spacing-units: map-merge((\n  tiny: $global-baseline * unit-factor(tiny),\n  small: $global-baseline * unit-factor(small),\n  normal: $global-baseline * unit-factor(),\n  large: $global-baseline * unit-factor(large),\n  huge: $global-baseline * unit-factor(huge),\n), $spacing-units);\n\n// Font sizes.\n$global-font-size: 16px !default;\n$global-line-height: spacing-unit() !default;\n\n// @see gap() function for more information.\n$gap-size: spacing-unit(tiny);\n\n// Font\n$font-family-sans-serif: 'Helvetica Neue', Helvetica, Arial, sans-serif !default;\n$font-family-serif: Georgia, 'Times New Roman', Times, serif !default;\n$font-family-monospace: Menlo, Monaco, Consolas, 'Courier New', monospace !default;\n$font-family: $font-family-sans-serif !default;\n\n// Text\n$text-color: #202124 !default;\n// @todo move or remove.\n$text-color-subtle: gray(500) !default;\n$text-color-highlight: gray(600) !default;\n$text-color-info: theme-color(info) !default;\n$text-color-success: theme-color(success) !default;\n$text-color-warning: theme-color(warning) !default;\n$text-color-error: theme-color(error) !default;\n\n// Border radius.\n$border-radius-small: 3px !default;\n$border-radius-base: 4px !default;\n$border-radius-large: 6px !default;\n","// =============================================================================\n// Typography.\n// =============================================================================\n\n$paragraph-margins: 0 0 1rem !default;\n\n$mark-bg: #fff9c4 !default;\n$mark-padding: .2em !default;\n$mark-color: inherit !default;\n\np {\n  margin: $paragraph-margins;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n\nsmall {\n  @include font-size($global-font-size * 0.80);\n  font-weight: normal;\n}\n\nbig {\n  @include font-size($global-font-size * 1.20);\n  font-weight: normal;\n}\n\nmark {\n  padding: $mark-padding;\n  background-color: $mark-bg;\n  color: $mark-color;\n}\n\ncode {\n  font-size: $global-font-size;\n  font-family: $font-family-monospace;\n}\n","// =============================================================================\n// Headings.\n// =============================================================================\n\n$font-size-h1: 36px !default;\n$font-size-h2: 28px !default;\n$font-size-h3: 24px !default;\n$font-size-h4: 20px !default;\n$font-size-h5: 18px !default;\n$font-size-h6: 16px !default;\n\n$headings-margin-bottom: 0.5rem !default;\n\nh1 {\n  @include font-size($font-size-h1);\n}\n\nh2 {\n  @include font-size($font-size-h2);\n}\n\nh3 {\n  @include font-size($font-size-h3);\n}\n\nh4 {\n  @include font-size($font-size-h4);\n}\n\nh5 {\n  @include font-size($font-size-h5);\n}\n\nh6 {\n  @include font-size($font-size-h6);\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin-top: unset;\n  margin-bottom: $headings-margin-bottom;\n}\n","// =============================================================================\n// Links.\n// =============================================================================\n\n$link-color: map-get($theme-colors, primary) !default;\n$link-decoration: none !default;\n$link-hover-color: theme-color-level(primary, 4) !default;\n$link-hover-decoration: none !default;\n\na {\n  color: $link-color;\n  text-decoration: $link-decoration;\n\n  &:hover {\n    color: $link-hover-color;\n    text-decoration: $link-hover-decoration;\n  }\n}\n","// =====================================\n// Return mixed color by his key and variant name.\n//\n// @see https://material.io/design/color/the-color-system.html#color-usage-palettes\n//\n// Official Material palette is handcrafted, so this function mix colors close\n// as possible, but there is not 100% match.\n// @see https://github.com/mbitson/mcg/issues/94#issuecomment-277840806\n// ====================================\n@function color-palette($color, $variant: 500) {\n  @if ($variant == 50) {\n    @return lighten($color, 52%);\n  }\n  @else if ($variant == 100) {\n    @return lighten($color, 37%);\n  }\n  @else if ($variant == 200) {\n    @return lighten($color, 26%);\n  }\n  @else if ($variant == 300) {\n    @return lighten($color, 12%);\n  }\n  @else if ($variant == 400) {\n    @return lighten($color, 6%);\n  }\n  @else if ($variant == 500) {\n    @return $color;\n  }\n  @else if ($variant == 600) {\n    @return darken($color, 6%);\n  }\n  @else if ($variant == 700) {\n    @return darken($color, 12%);\n  }\n  @else if ($variant == 800) {\n    @return darken($color, 18%);\n  }\n  @else if ($variant == 900) {\n    @return darken($color, 24%);\n  }\n  @else if ($variant == A100) {\n    @return saturate(lighten($color, 50%), 30%);\n  }\n  @else if ($variant == A200) {\n    @return saturate(lighten($color, 30%), 30%);\n  }\n  @else if ($variant == A400) {\n    @return saturate(lighten($color, 10%), 15%);\n  }\n  @else if ($variant == A700) {\n    @return saturate(lighten($color, 5%), 5%);\n  }\n  @else {\n    @error \"Sorry, but \"#{$variant}\" is not a valid value for $variant. Available values: 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, A100, A200, A400, A700.\"\n  }\n}\n\n// =====================================\n// Compares contrast of a given color to the light/dark arguments and returns\n// whichever is most \"contrasty\".\n// ====================================\n@function color-yiq($color, $dark: $yiq-text-dark, $light: $yiq-text-light) {\n  @if $color == null {\n    @return null;\n  } @else {\n    $yiq: (red($color) * 299 + green($color) * 587 + blue($color) * 114) / 1000;\n    @return if($yiq >= 128, $dark, $light);\n  }\n}\n\n// =====================================\n// Return color by his key.\n// ====================================\n@function color($key: blue) {\n  @return map-get($colors, $key);\n}\n\n// =====================================\n// Return mixed color by his key.\n// ====================================\n@function color-level($color-name: primary, $level: 0) {\n  $color: color($color-name);\n  $color-base: if($level > 0, #000000, #FFFFFF);\n  $level: abs($level);\n  @return mix($color-base, $color, $level * $theme-color-interval);\n}\n\n// =====================================\n// Return color by his key.\n// ====================================\n@function theme-color($key: primary) {\n  @return map-get($theme-colors, $key);\n}\n\n// =====================================\n// Return mixed color by his key.\n// ====================================\n@function theme-color-level($color-name: primary, $level: 0) {\n  $color: theme-color($color-name);\n  $color-base: if($level > 0, #000000, #FFFFFF);\n  $level: abs($level);\n  @return mix($color-base, $color, $level * $theme-color-interval);\n}\n\n// =====================================\n// Return grey color by his key.\n// ====================================\n@function gray($key: 100) {\n  @return map-get($grays, $key);\n}\n","// =============================================================================\n// Lists.\n// =============================================================================\n\n$list-margins: 1rem 0 1rem 2rem !default;\n$list-paddings: 0 !default;\n\nol, ul {\n  margin: $list-margins;\n  padding: $list-paddings;\n}\n","// =============================================================================\n// Images.\n// =============================================================================\n\nimg {\n  max-width: 100%;\n  // Fixes aspect ratio.\n  height: auto;\n  // For ALT attribute.\n  font-style: italic;\n  // Fixes whitespace under images.\n  vertical-align: middle;\n}\n","// =============================================================================\n// Blockquotes.\n// =============================================================================\n\n$blockquote-font-size: $global-font-size !default;\n$blockquote-border-size: 4px !default;\n$blockquote-border-color: gray(400) !default;\n$blockquote-paddings: gap() gap(2) !default;\n$blockquote-margins: 0 0 gap(2) !default;\n$blockquote-bg: transparent !default;\n\nblockquote {\n  @include font-size($blockquote-font-size);\n  padding: $blockquote-paddings;\n  margin: $blockquote-margins;\n  border-left: $blockquote-border-size solid $blockquote-border-color;\n  background: $blockquote-bg;\n}\n","// =====================================\n// Remove units and return plain number.\n// =====================================\n@function strip-unit($number) {\n  @if type-of($number) == 'number' and not unitless($number) {\n    @return $number / ($number * 0 + 1);\n  }\n\n  @return $number;\n}\n\n// =====================================\n// Return gap size.\n// This functions is used in default styles as \"rule of 8px\".\n// @see https://medium.com/wayfair-design/more-padding-please-b95e19422acc\n// =====================================\n@function gap($size: 1) {\n  @return (($gap-size * $size) / $global-font-size) * 1rem;\n}\n","// =============================================================================\n// Horizontal rules.\n// =============================================================================\n\n$hr-border-color: gray(500) !default;\n$hr-margin-top: gap(2) !default;\n$hr-margin-bottom: gap(2) !default;\n\nhr {\n  margin-top: $hr-margin-top;\n  margin-bottom: $hr-margin-bottom;\n  border: 0;\n  border-top: 1px solid $hr-border-color;\n}\n"]}